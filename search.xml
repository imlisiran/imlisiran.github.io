<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一个git的小问题</title>
      <link href="/2022/08/26/%E4%B8%80%E4%B8%AAgit%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
      <url>/2022/08/26/%E4%B8%80%E4%B8%AAgit%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近在执行命令<code>hexo d</code>的时候，git老是报如下的错：</p><img src="/2022/08/26/%E4%B8%80%E4%B8%AAgit%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/0.png" class="" title="报错"><p>而且每次推送完成之后，都发现github page里的自定义域名没了，要再填一遍，麻烦得很。后来问了开哥，解决方案如下：</p><ul><li>首先执行命令<figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure>将自动换行替换关掉（git有时会将linux的lf换行转换成windows的crl换行）<br>然后看看github的根目录下有没有一个cname文件，没有的话创建一个，内容就是自己的域名。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bilibili插件测试</title>
      <link href="/2022/08/26/bilibili%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/08/26/bilibili%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="note warning modern"><p>This article is use to test a plugin “bilibili tag”</p></div><style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-kVKJVIvkQxopLkQy" src="https://player.bilibili.com/player.html?bvid=BV1YW4y187mt&page=1&high_quality=1&danmaku=true" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-kVKJVIvkQxopLkQy").style.height=document.getElementById("mmedia-kVKJVIvkQxopLkQy").scrollWidth*0.76+"px";    window.onresize = function(){      document.getElementById("mmedia-kVKJVIvkQxopLkQy").style.height=document.getElementById("mmedia-kVKJVIvkQxopLkQy").scrollWidth*0.76+"px";    }; </script><div class="note primary modern"><p>你可以正常的看到bilibili视频，说明正在使用的浏览器支持该插件的运作方式；如果无法正常加载，请尝试更换浏览器或打开浏览器js开关。</p></div>]]></content>
      
      
      
        <tags>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记办理兵役登记证的经历</title>
      <link href="/2022/08/25/%E8%AE%B0%E5%8A%9E%E7%90%86%E5%85%B5%E5%BD%B9%E7%99%BB%E8%AE%B0%E8%AF%81%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
      <url>/2022/08/25/%E8%AE%B0%E5%8A%9E%E7%90%86%E5%85%B5%E5%BD%B9%E7%99%BB%E8%AE%B0%E8%AF%81%E7%9A%84%E7%BB%8F%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p>  大学就要开学了，前几天收到通知说要办理一个兵役登记证，于是就上百度搜了一下要带什么资料<a href="https://www.baidu.com/s?wd=%E5%8A%9E%E7%90%86%E5%85%B5%E5%BD%B9%E7%99%BB%E8%AE%B0%E8%AF%81%E9%9C%80%E8%A6%81%E4%BB%80%E4%B9%88%E6%9D%90%E6%96%99&rsv_spt=1&rsv_iqid=0xc09a6dc4000047cd&issp=1&f=3&rsv_bp=1&rsv_idx=2&ie=utf-8&rqlang=cn&tn=88093251_110_hao_pg&rsv_dl=ts_0&rsv_enter=1&oq=%25E5%258A%259E%25E5%2585%25B5%25E5%25BD%25B9%25E8%25AF%2581%25E9%259C%2580%25E8%25A6%2581%25E5%25B8%25A6%25E4%25BB%2580%25E4%25B9%2588%25E8%25AF%2581%25E4%25BB%25B6&rsv_t=925bY/Yolm/w5P5wtu1cKT/yBqWgn/nLBSlqX3N62dL8bZfwecf2fF9UAUybcRvY+XMc9PwjzHtSZQ&rsv_btype=t&rsv_pq=c006f57f00026dbf&rsv_sug3=21&rsv_sug1=18&rsv_sug7=100&rsv_sug2=1&prefixsug=%25E5%258A%259E%25E7%2590%2586%25E5%2585%25B5%25E5%25BD%25B9%25E7%2599%25BB%25E8%25AE%25B0&rsp=0&inputT=8744&rsv_sug4=8745">链接</a><br>  材料不多，一下就弄完了。看到网上都说是去户籍地的街道武装部办，就骑单车跑去黄埔街问。结果那里的人说哪里哪里，是去居住地的武装部办啊，不是户籍地的武装部，小伙子你搞错啦。于是我又屁颠屁颠跑去大沙街道办事处问，那里的门卫又说，哎呀，哪里是在我们这里办啊靓仔，去社区就可以办啦。我说哦哦哦，谢谢你哈。然后又回到社区问，那里的人终于说是在那里办，不过办证的那个人今天出去了，要不明天你来问问。<br>  总结一下，我带着一些资料在外面转悠了一上午，和几个街道工作人员扯了一下皮，最后又绕了回来，什么也没办到。</p><img src="/2022/08/25/%E8%AE%B0%E5%8A%9E%E7%90%86%E5%85%B5%E5%BD%B9%E7%99%BB%E8%AE%B0%E8%AF%81%E7%9A%84%E7%BB%8F%E5%8E%86/2.png" class="" title="今日路线"><p>  回到家已经11点半了，坐下来喝杯茶打开电脑，写下了这篇文章。说实在的，我一点也不生气，没什么情绪————我向来不会发火。我也不知道这种情况是不是应该要恼火，因为想来想去，这件事里谁也没有做错什么。但至于结果为什么会是这样，我还在思索。<br>  总而言之，这个世界那么大，我们做点什么事都是不容易的。<br>  <img src="/2022/08/25/%E8%AE%B0%E5%8A%9E%E7%90%86%E5%85%B5%E5%BD%B9%E7%99%BB%E8%AE%B0%E8%AF%81%E7%9A%84%E7%BB%8F%E5%8E%86/1.jpg" class="" title="notittle"></p>]]></content>
      
      
      <categories>
          
          <category> 琐事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的迁移</title>
      <link href="/2022/08/23/hexo%E7%9A%84%E8%BF%81%E7%A7%BB/"/>
      <url>/2022/08/23/hexo%E7%9A%84%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这几天买了台新的笔记本，性能比之前的老台式还要好😂，而且考虑到上大学要一直带着，长期要使用这台电脑，所以决定从老电脑上把hexo迁移过来，方便写博客和更新站点。</p><h1 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h1><p>第一时间上百度搜相关的内容<a href="https://www.baidu.com/s?wd=hexo%E6%8D%A2%E7%94%B5%E8%84%91%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E&rsv_spt=1&rsv_iqid=0xeeefb3540009038b&issp=1&f=3&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=88093251_110_hao_pg&rsv_enter=1&rsv_dl=ts_0&rsv_sug3=12&rsv_sug1=9&rsv_sug7=101&rsv_sug2=1&rsv_btype=i&prefixsug=hexo%25E6%258D%25A2&rsp=0&inputT=8180&rsv_sug4=9125">链接</a>，结果又是五花八门，众说纷纭，然后试了scdn上说的方法<a href="https://blog.csdn.net/qq_34187711/article/details/88592760">链接</a>,有一说一，亲测没用。<br>然后又试了其他一些博主的方法，也都不尽人意，<code>git bush</code>的时候老是报错。自己摸索了好久。</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>经过不懈努力，终于搞定了，hexo终于完整的迁移到了新电脑上，过程如下(其实很简单):<br>在hexo的初始文件夹，你会看到如下结构<img src="/2022/08/23/hexo%E7%9A%84%E8%BF%81%E7%A7%BB/0.png" class="" title="hexo目录"><br>然后从旧的博客文件夹里，将以下文件（夹）复制到新博客目录相应位置：</p><ul><li>&#x2F;blogroot&#x2F;config.yml</li><li>&#x2F;blogroot&#x2F;source</li><li>&#x2F;blogroot&#x2F;theme<div class="note primary simple"><p>弄完之后，就基本上搞定了，但是可能还会存在报错的情况。这就有可能是版本的问题，可以考虑版本回退使hexo适应当前nodjs版本。当然，对此最简单的方法是将所有（包括nodejs,hexo,git）都升级至最高级。</p></div>搞定之后，执行hexo的命令就可以了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 技术 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乐观与悲观</title>
      <link href="/2022/08/17/%E4%B9%90%E8%A7%82%E4%B8%8E%E6%82%B2%E8%A7%82/"/>
      <url>/2022/08/17/%E4%B9%90%E8%A7%82%E4%B8%8E%E6%82%B2%E8%A7%82/</url>
      
        <content type="html"><![CDATA[<p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我看《人性的弱点》的时候，我们老卡先生说：在悲观者心中现实是或多或少被丑化了的。另外我又想起之前那本书里的一句话:他很完美,就是有点悲观。上述种种无不说明，在大多数人眼中悲观并不是一个令人喜欢的品质，或者说性格。这种现象很奇怪，我认为其原因之一是人们总把悲观和消极联系在一起。这不能说不对，只能说不妥。有关两者的本质区别，网上的解释五花八门，各种奇怪的说法都有，这种情形使人很不满意，其实一个例子就能说明问题：同样有一个苹果，乐观的人会想，还好我还有一个苹果；而悲观的人会想，我只剩一个苹果了。</p><img src="/2022/08/17/%E4%B9%90%E8%A7%82%E4%B8%8E%E6%82%B2%E8%A7%82/1.png" class="" title="no tittle"><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;乐观的人向来为人称赞，悲观的人则总是显得默默无闻。这是因为人们老是认为悲观是不对的。关于乐观和悲观，只能说他们是不同的，而绝不能说他们哪个不对。<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;有一个故事是这样的，两个人从同一个栅栏里看出去，一个人看见了泥泞的土地，一个看见了满天星辰。于是得到结论，前者是个悲观的人，后者是个乐观的人。先不说一片漆黑里，是怎样看到土地泥不泥泞的。以及大气污染如此严重，能否看见星辰。单那个结论就让人生疑。有可能是栅栏结构的问题，使高个子看不见土地，而只能看见天空；而使矮个子看不见天空，只能看见土地。或者说前者是个脚踏实地的实践家，而后者是个做梦的梦想家；也有可能前者是个农夫，爱看土地；而后者是个天文学者，爱看天。总之有无数种可能。以上事例说明，我们不能仅仅从一个人的表面行为去判断其乐观与否。一个人的行为总是受环境及心态的影响。如上述故事中，有可能是悲观的人，那天上午冷战已久的女朋友回消息了，晚上就很开心，于是仰头看天，觉得满天星辰都在为自己的爱情祝福；乐观的人有脊椎病，抬头困难，只能俯身看着土地，所以判断一个人的性格主要还是从内在而长久的观察。</p><img src="/2022/08/17/%E4%B9%90%E8%A7%82%E4%B8%8E%E6%82%B2%E8%A7%82/2.jpg" class="" title="no tittle"><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我早些时候是羽毛球体育生，对于乐观和悲观的理解就相当丰富。很多次比赛打到关键分的时候，结果自己犯傻逼，白给了一个球，有时候我就想，我操，完蛋了要输。过了一会儿又想，妈的，让你一分你也赢不了我。在某些时候悲观和乐观是转化的非常快的。因为一点小事就会不可避免地对人的情绪产生影响，所以我觉得从来就没有绝对乐悲观的人。乐观的人只能说明他乐观的时间多于悲观，悲观的人则是悲观的时间多于乐观。<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;按照通常的定义来看，我自己就是个悲观的人。看事情一天到晚只能看到不好的一面。很难看到好的一面，可是我的人生至今还算顺利，羽毛球比赛也常常赢，这就充分证明悲观也未必就比不上乐观。总结起来，我的经验是这样的，遇到困难和挫折心态固然重要，可是比心态更重要的是，不管自己内心是怎么想的，也要坚强的直面困难，化解危机。我打羽毛球就是这样，什么时候主观情绪都要放一放，尽力把握好每一个球才有可能战胜对手。<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们受过的教育都在告诉我们，要保持良好的心态，即乐观占了很大一部分。却少有人教我们坏心态时该怎么办，对此教我的人说要调整心态，这个答案没问题，但让我听了很恼火，就想给他梆梆来两拳。在困境之时调整自己的心态。然后重回正轨，这很厉害，但比这更可敬的是那些直面悲观无视心态而逆流而上的人，悲观和乐观不应该影响我们前进的步伐。<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;初中那会儿有一段时间特别羡慕那些乐观的人。觉得他们什么都看得开，像自己这么悲观，啥事都要琢磨来琢磨去，折腾半天，活像个傻逼，现在想想。你早就无所谓了，我从选择做悲观的人那时起就准备好折腾了，另外我要说明的是乐观和悲观随时可以转化，悲观的人不一定不乐观，我们都可以作出选择。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 感悟 </tag>
            
            <tag> 想入非非 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>悲伤与阳光</title>
      <link href="/2022/08/05/%E6%82%B2%E4%BC%A4%E4%B8%8E%E9%98%B3%E5%85%89/"/>
      <url>/2022/08/05/%E6%82%B2%E4%BC%A4%E4%B8%8E%E9%98%B3%E5%85%89/</url>
      
        <content type="html"><![CDATA[<p>&amp;nbsp;&amp;nbsp;卡耐基在《人性的弱点》里说：<strong>不要让悲伤挡住了你的阳光。</strong>这句话的出发点是好的，鼓励我们要积极一点，但他的观点我并不完全认同。老卡先生想表达的是：无论遇到什么挫折与失败，都要保持良好的情绪和积极的心态，努力保持愉快然后解决问题。这个想法很棒，但问题在于这个世界上没有真正的乐天派，（那些在困境中保持乐观的情况看起来多少优点强颜欢笑），谁都会有悲伤、失落的时候，只不过有些人将其表露出来，有些人则将其深埋于心，仅此而已。</p><img src="/2022/08/05/%E6%82%B2%E4%BC%A4%E4%B8%8E%E9%98%B3%E5%85%89/1.jpg" class="" title="人性的弱点"><p>&amp;nbsp;&amp;nbsp;我认为，悲伤更像是一种休息，是身体发出劳累的信号，它在告诉我们————是时候该停一停了。想象一下，如果一个社会里人们都每天都元气满满，每时每刻都积极得要命，那也是病态的、不健康的。这个世界之所以在曲折之中进步，很大一部分原因是既有乐观的人，也有悲观的人。其中，<mark class="hl-label blue">乐观的人负责前进，而悲观的人负责解决前进路上遇到的问题。</mark> </p><img src="/2022/08/05/%E6%82%B2%E4%BC%A4%E4%B8%8E%E9%98%B3%E5%85%89/2.jpg" class="" title="no tittle"><p>&amp;nbsp;&amp;nbsp;老卡先生观点的核心是：不要让挫折影响你积极的心态。而我是这样想的：要让挫折适当影响一下积极的心态，因为人在悲观、消极的情绪下更容易冷静下来，思考到底该如何解决问题；反而大多数时候，人们总是把鲁莽和积极混淆。<br>&amp;nbsp;&amp;nbsp;虽然阳光很美且有益，但过量的暴晒，会把人晒坏的。所以，<strong>让悲伤挡住一些阳光。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 想入非非 </tag>
            
            <tag> 杂念 </tag>
            
            <tag> 人性的弱点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建日记--B站篇</title>
      <link href="/2021/06/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0-B%E7%AB%99%E7%AF%87/"/>
      <url>/2021/06/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0-B%E7%AB%99%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>  忽然想起movies分类页里啥也没有，只有两个onedrive的视频分享链接，可以说是空空如也，于是决定再加一点内容。在<a href="hexo.io">hexo</a>的官网找了一下，发现一的个很不错的插件，支持将B站的视频嵌入到博客中。</p><div class="note info modern"><p>为什么不用Dplayer？诚然，<a href="https://github.com/MoePlayer/DPlayer">Dplayer</a>作为一个网站嵌入式视频播放器相当优秀，功能强大实用.调用也很方便。但是不足之处在于不支持类似于B站的流媒体格式，要求你必须拥有.mp4等格式的原始文件，这就极大的限制了它的使用范围。再说，哪个白嫖党会去网上租空间放视频？&#x3D;。&#x3D;</p></div><p>  该项目名叫<a href="https://github.com/Z4Tech/hexo-tag-bilibili">hexo-tag-bilibili</a>,安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-tag-bilibili</span><br></pre></td></tr></table></figure><p>但是在官网上，安装的命令是这样子的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-bilibili</span><br></pre></td></tr></table></figure><p>如果执行官网的这个命令，就会出现：</p><img src="/2021/06/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0-B%E7%AB%99%E7%AF%87/0.png" class="" title="实例图片"><div class="note danger flat"><p>请注意当前的版本是否符合其要求</p></div><p>可以看出，报了一堆的错，没有安装成功。折腾了好久，翻回之前的博客文章，才发现<code>npm</code>y应该换成<code>cnpm</code>，原因参见前几篇的文章。<br>好不容易安装完，又有新的问题，真是吐了。弄完之后随便塞个B站视频的id进去发现播放不了，研究了一下发现插件生成的网址key居然用的是av？！我的天，众所周知B站现在全是bv号，只有仅存的几个还保留着av号。</p><img src="/2021/06/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0-B%E7%AB%99%E7%AF%87/2.png" class="" title="逝去的av"><img src="/2021/06/11/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0-B%E7%AB%99%E7%AF%87/3.png" class="" title="现在的bv"><p>唉，实在没办法，这个插件版本太旧了，项目作者也不知道多久没有更新过了，将就着用吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新恢复博客</title>
      <link href="/2021/05/31/%E9%87%8D%E6%96%B0%E6%81%A2%E5%A4%8D%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/05/31/%E9%87%8D%E6%96%B0%E6%81%A2%E5%A4%8D%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>  又有很长一段时间没有更新博客了，这段时间里发生了太多事情，太多变故了。首先是疫情的反弹，广州现在疫情防控形势很严峻，都是居家学习，所以才有时间更新博客，平时学业上的事情实在是太多了。<br>  时间过得真快，一下子就高三了，努力！<br>  本来当时想着要经常更新博客的，但时间根本不允许，以后有时间了一定要频繁更新：）。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 说明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客加载速度问题</title>
      <link href="/2020/08/06/%E5%8D%9A%E5%AE%A2%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/06/%E5%8D%9A%E5%AE%A2%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>前天，有一哥们儿跟我说我的博客加载速度超慢。我自己看了一下，好像时确实存在这个问题。这不能赖gitee或者是运营商，得从自身找原因。</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p> 首先想到的是图片的大小问题，这跟加载速度有很大关系，越大越慢，越小越快。在之前两篇的博客里，实例图片都用的是原图，也就是上传的<code>gitee</code>仓库里的。当然，这种办法也很重要，这里有必要说明一下。</p><h2 id="图片引用的相对路径"><a href="#图片引用的相对路径" class="headerlink" title="图片引用的相对路径"></a>图片引用的相对路径</h2><p>  首先，在<code>blog</code>目录下找到<code>_config.yml</code>文件，找到以下代码：<br>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><br>将其中<code>post_asset_folder</code>后的<code>false</code>改为<code>true</code>，这样以后在创建新文章的时候，hexo就会在<code>blog/source/posts</code>目录下，新建一个与你博客标题同名的文件夹，你就可以把要用的图片放进去。<br>在编写文章的<code>.md</code>文件时在要插入图片的地方使用以下标签：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset<span class="emphasis">_img example.jpg this is an example image %&#125;</span></span><br></pre></td></tr></table></figure><p>其中<code>example.jpg</code>就是图片文件名，当然后缀也可以是<code>.png</code>，然后<code>this is an example image</code>就是图片的描述文字。<br>但是，这种办法很容易导致图片过大而加载缓慢，建议先将图片压缩后再上传。这里推荐<a href="https://tinypng.com/">在线压缩</a>。</p><h2 id="引用网络图片"><a href="#引用网络图片" class="headerlink" title="引用网络图片"></a>引用网络图片</h2><p> 这是一种非常简单的办法，而网络上的图标往往都是经过压缩的，省去了很多过程。在需要插入图片的地方使用以下标签：<br> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片的描述文字</span>](<span class="link">图片的地址</span>)</span><br></pre></td></tr></table></figure><br>以上两种方法的图片都经过压缩，原来5MB的图片压缩后只有700KB，能极大加快加载速度。</p><h1 id="静态文件的大小"><a href="#静态文件的大小" class="headerlink" title="静态文件的大小"></a>静态文件的大小</h1><p>  除了图片，网站静态文件也很关键，这里使用<code>gulp</code>插件实现压缩，在&#96;&#96;blog&#96;根目录里，安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install --save gulp-htmlmin</span><br><span class="line">npm install gulp-clean-css --save-dev</span><br><span class="line">npm install --save-dev gulp-uglify</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line">npm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><p>随后，在<code>blog</code>目录里创建一个<code>gulpfile.js</code>文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">&#x27;gulp-clean-css&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlmin&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-imagemin&#x27;</span>)</span><br><span class="line"><span class="comment">// tester </span></span><br><span class="line"><span class="comment">// var uglifyjs = require(&#x27;terser&#x27;)</span></span><br><span class="line"><span class="comment">// var composer = require(&#x27;gulp-uglify/composer&#x27;)</span></span><br><span class="line"><span class="comment">// var pump = require(&#x27;pump&#x27;)</span></span><br><span class="line"><span class="comment">// var minify = composer(uglifyjs, console)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// babel </span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">&#x27;gulp-babel&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// minify js - babel</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;compress&#x27;</span>, <span class="function">() =&gt;</span></span><br><span class="line">  gulp.<span class="title function_">src</span>([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">babel</span>(&#123;</span><br><span class="line">      <span class="attr">presets</span>: [<span class="string">&#x27;@babel/preset-env&#x27;</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">uglify</span>().<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// minify js - tester </span></span><br><span class="line"><span class="comment">// gulp.task(&#x27;compress&#x27;, function (cb) &#123;</span></span><br><span class="line"><span class="comment">//   var options = &#123;&#125;</span></span><br><span class="line"><span class="comment">//   pump([</span></span><br><span class="line"><span class="comment">//     gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;]),</span></span><br><span class="line"><span class="comment">//     minify(options),</span></span><br><span class="line"><span class="comment">//     gulp.dest(&#x27;./public&#x27;)</span></span><br><span class="line"><span class="comment">//   ],</span></span><br><span class="line"><span class="comment">//   cb</span></span><br><span class="line"><span class="comment">//   )</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// css</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.css&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">cleanCSS</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 public 目录内 html</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">htmlclean</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">htmlmin</span>(&#123;</span><br><span class="line">      <span class="attr">removeComments</span>: <span class="literal">true</span>, <span class="comment">// 清除 HTML 註释</span></span><br><span class="line">      <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>, <span class="comment">// 压缩 HTML</span></span><br><span class="line">      <span class="attr">collapseBooleanAttributes</span>: <span class="literal">true</span>, <span class="comment">// 省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">      <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>, <span class="comment">// 删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">      <span class="attr">removeScriptTypeAttributes</span>: <span class="literal">true</span>, <span class="comment">// 删除 &lt;script&gt; 的 type=&quot;text/javascript&quot;</span></span><br><span class="line">      <span class="attr">removeStyleLinkTypeAttributes</span>: <span class="literal">true</span>, <span class="comment">// 删除 &lt;style&gt; 和 &lt;link&gt; 的 type=&quot;text/css&quot;</span></span><br><span class="line">      <span class="attr">minifyJS</span>: <span class="literal">true</span>, <span class="comment">// 压缩页面 JS</span></span><br><span class="line">      <span class="attr">minifyCSS</span>: <span class="literal">true</span>, <span class="comment">// 压缩页面 CSS</span></span><br><span class="line">      <span class="attr">minifyURLs</span>: <span class="literal">true</span></span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 public/uploads 目录内图片</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-images&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/img/**/*.*&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">imagemin</span>(&#123;</span><br><span class="line">      <span class="attr">optimizationLevel</span>: <span class="number">5</span>, <span class="comment">// 类型：Number  预设：3  取值範围：0-7（优化等级）</span></span><br><span class="line">      <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="comment">// 类型：Boolean 预设：false 无失真压缩jpg图片</span></span><br><span class="line">      <span class="attr">interlaced</span>: <span class="literal">false</span>, <span class="comment">// 类型：Boolean 预设：false 隔行扫描gif进行渲染</span></span><br><span class="line">      <span class="attr">multipass</span>: <span class="literal">false</span> <span class="comment">// 类型：Boolean 预设：false 多次优化svg直到完全优化</span></span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public/img&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行 gulp 命令时执行的任务</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, gulp.<span class="title function_">parallel</span>(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span>, <span class="string">&#x27;minify-images&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure><p><code>以上方法来源于[jerry](https://demo.jerryc.me)</code><br>这样，以后在部署博客时，命令就变成了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">gulp</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>所有步骤完成后，就可以发现加载速度快了许多。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客搭建的那些事</title>
      <link href="/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>  啦啦啦，折腾了快两个月，博客终于搞定了&#x3D;。&#x3D;<br>  这期间由于学习方面的事情，建博客的工作停滞了很长一段时间。现在终于期末考完了，有时间折腾了。<br>  当然，在这里要感谢<a href="https://blog.soulxyz.top/">开哥</a>,不厌其烦的为我提供技术指导。<br>  还要感谢<a href="https://demo.jerryc.me/">jerry</a>,提供了非常棒的<code>butterfly</code>主题。<br>  在白手起家建博客的过程中，踩了无数的坑。我想我要把完整的过程记下来，方便日后的整理和学习。也对像我一样的<code>git</code>小白提供帮助。<br>  <code>先来首歌放松一下吧</code></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p>  需要安装：<a href="http://nodejs.cn/download/">node.js</a>,<a href="https://git-scm.com/downloads">git工具</a>.两种工具都是傻瓜式的安装，一路选择默认就可以了。<br>            还有读写<code>.yml</code>文件的工具，这里推荐<a href="https://www.microsoft.com/zh-cn/p/serris-code-editor/9nblggh4rm22?activetab=pivot:overviewtab">官方的软件</a></p><div class="note primary no-icon flat"><p>安装完成后，在电脑桌面上点击右键，可以看到对话框中多了<code>git GUI here</code>和<code>git bash here</code>,说明安装成功。</p></div><div class="note danger flat"><p>安装node.js时要注意版本信息，有时版本过高git命令会报错，这是就要安装旧一点的node.js</p></div><h1 id="hexo的安装及初始化博客"><a href="#hexo的安装及初始化博客" class="headerlink" title="hexo的安装及初始化博客"></a>hexo的安装及初始化博客</h1><p> 由于<code>hexo</code>的镜像文件在国外，经常会被墙，导致初始化失败，所以这时候就要先安装淘宝的镜像文件来代替。在电脑桌面上右键打开git bash，执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><br> 等待安装完成。然后继续执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo </span><br></pre></td></tr></table></figure></p><p> 安装完成后，继续执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><br> 这一个步骤对网络要求比较高，如果网络不顺畅，很容易出现各种报错(warning),多试几次就好了。等到命令执行完后，再执行:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><br> 至此，hexo就算安装完了。回到电脑桌面，可以看到多出来一个名为<code>blog</code>的文件夹。这就是hexo工作的文件夹。</p> <div class="note primary no-icon flat"><p>如果你这时候已经迫不及待的想看看自己的博客了，可以在blog目录下执行命令<code>hexo s</code>,然后再浏览器中输入网址<code>http://localhost:4000</code>,就可以在本地预览博客了。</p></div><h1 id="推送到gitee（因为github经常被墙，巨慢无比）"><a href="#推送到gitee（因为github经常被墙，巨慢无比）" class="headerlink" title="推送到gitee（因为github经常被墙，巨慢无比）"></a>推送到gitee（因为github经常被墙，巨慢无比）</h1><p> 首先你要有个<a href="https://gitee.com/">gitee</a>的账号，在上面创建一个新的仓库，名字随便取。</p><img src="/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/a.png" class="" title="This is an example image"><p> 然后进入到<code>blog</code>目录里先后执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><br> 从命令的反馈里可以看到，hexo生成了很多<code>css</code>,<code>js</code>的静态文件。然后继续执行命令：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-devepoler-git --save</span><br></pre></td></tr></table></figure></p><p> 这里安装了一个hexo的插件，用于自动部署。</p><p> 随后进入到blog目录里打开_config.yml文件，在最下面添加以下代码：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>然后，回到gitee上你刚刚新建的仓库里，复制它给你的<code>ssh</code>地址到上述代码的<code>repository</code>中：</p><p><img src="/b.png" alt="0"></p><div class="note danger flat"><p>注意：在配置所有的_config.yml文件时，所有的冒号后面都要加一个空格，否则hexo命令会报错</p></div><h2 id="生成密匙"><a href="#生成密匙" class="headerlink" title="生成密匙"></a>生成密匙</h2><h3 id="和gitee的通讯方式"><a href="#和gitee的通讯方式" class="headerlink" title="和gitee的通讯方式"></a>和gitee的通讯方式</h3><p>首先，在桌面上右键打开<code>git bash</code>工具，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config –global user.name <span class="string">&#x27;xxxxx&#x27;</span></span><br><span class="line">git config –global user.email <span class="string">&#x27;xxx@xx.xxx&#x27;</span></span><br></pre></td></tr></table></figure><p>其中，<code>name</code>就是你的gitee的用户名，<code>email</code>就是你用来创建gitee的邮箱，这一步等于告诉了git你的身份。</p><div class="note primary no-icon flat"><p>配置完用户信息后，如果git命令没有任何回馈，则代表配置成功。</p></div><p>配置完后，接着输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你在上一步输入的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后一路回车，出现类似一下回馈，代表创建<code>ssh</code>密匙完成：<br><img src="/c.png" alt="0"></p><p>创建完成后，再执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>git的回馈就是你的密匙，把他全部copy下来，粘贴到gitee上<br><img src="/d.png" alt="0"><br>在<code>gitee主页--头像--设置--ssh密匙</code>里添加密匙</p><p>之后回到本地，在blog目录里执行<code>hexo d</code>,博客就推送到线上了，去<code>仓库--服务--gitee pages</code>开通gitee.pages服务，博客就算建完了。<br><img src="/e.png" alt="0"></p><p>完成之后，打开自己的网页，会发现<code>css</code>,<code>js</code>文件没有加载，这时候你又要回到本地的_<code>cnfig.yml</code>文件中，找到以下代码片段：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> </span><br><span class="line"><span class="attr">root:</span> </span><br></pre></td></tr></table></figure><p>按照他的要求填写，例如，我的就是：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ran_brother.gitee.io/blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog</span></span><br></pre></td></tr></table></figure><p>完成之后再执行<code>hexo clean</code>,<code>hexo g</code>,hexo d<code>,去更新gitee pages服务，</code>css<code>,</code>js&#96;文件就可以正常显示了。</p><h1 id="发表新的文章"><a href="#发表新的文章" class="headerlink" title="发表新的文章"></a>发表新的文章</h1><p> 在blog目录中，执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章题目</span><br></pre></td></tr></table></figure><br> 就会发现在blog&#x2F;source&#x2F;posts文件夹里多了一个与你新的文章名字相同的.md文件。用编辑器编辑里面的内容，注意要用<code>markdown</code>语法。<br> 如果对markdown语法不熟练，<a href="http://www.mdeditor.com/">请戳我</a>.完成之后保存。回到blog目录中，先后执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><br> 再去gitee更新一下pages服务，就可以看到自己的文章了。</p><p> 以上只是hexo的基础部分，很多地方不完善，日后我会把其他完善的过程继续记录下。</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
